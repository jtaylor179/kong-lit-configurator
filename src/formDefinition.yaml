---
registrationConfig:
  sections:
  - name: ServiceSettings
    label: Service Settings
    restrictTo: service
    items:
    - itemType: container
      containerRenderer: >
        return html`<div>
                <label style="display:block">---</label>
                ${this.renderSubItems(items)}
                <div>---</div>
                </div>`;
      style: 'border: 1px solid red;'
      class: defaultContainer
      items:
      - itemRef: nameField
      - itemType: field
        type: textfield
        name: tagField
        label: Tags
        dataType: array
        property: tags
      - itemType: field
        name: upstreamUrl
        type: textfield
        label: Upstream URL
        default:
        dataType: string
        property:
          out: 'const urlSpec = new URL(value); return {"host": urlSpec.hostname, "protocol":
            urlSpec.protocol.replace(":",""), "path": urlSpec.pathname, "port": (urlSpec.port ? parseInt(urlSpec.port): 80)};

            '
          in: |
            if(this.host){
              return this.protocol + '://' + this.host + (this.path ? this.path : '' );
            } else {
              return '';
            }
    - itemRef: corsEnabledField
    - itemType: container
      display: 'return fieldIndex.get("cors-enabled") ?
                  fieldIndex.get("cors-enabled").value === true : false;'
      items:
        - itemRef: corsMethodsField
        - itemRef: corsMaxAge
  - name: RouteSettings
    label: Route Settings
    restrictTo: route
    items:
      - itemRef: demoContainer
      - itemType: field
        name: path
        type: textfield
        label: Path
        default:
        dataType: array
        property: paths
      - itemRef: methodsField
  - name: Authentication
    label: Authentication
    items:
      - itemRef: demoContainer
      - itemRef: corsMethodsField
  - name: Security
    label: Security
  - name: Traffic
    label: Traffic Control
  - name: Validation
    label: Validation
  itemDefinitions:
    demoContainer:
      itemType: container
      items: []
      containerRenderer: >
        return html`<div>ref container example</div>`;
    corsEnabledField:
      itemType: field
      name: cors-enabled
      property: enabled
      type: switch
      dataType: boolean
      label: CORS Enabled
      default: false
    nameField:
      itemType: field
      name: name
      property: name
      type: textfield
      label: Name
      dataType: string
      required: true
    corsMethodsField:
      itemType: field
      name: cors-methods
      plugin: cors
      dataType: array
      property: methods
      type: checkbox
      label: CORS Methods
      validationType: function
      validationFunction: function(val, fields){ return true;}
      options:
      - GET
      - POST
      - PUT
      - DELETE
      default:
      required: 'return fieldIndex.get("cors-enabled") ? fieldIndex.get("cors-enabled").value === true : false;'
      help: Blah blah
    corsMaxAge:
      itemType: field
      name: cors-max-age
      label: CORS Max Age
      plugin: cors
      property: max_age
      type: textfield
      dataType: number
    corsOriginsField:
      itemType: field
      name: cors-origins
      plugin: cors
      property: origin
      label: Origins
      type: textfield
      dataType: array
      default:
    methodsField:
      itemType: field
      name: methods
      property: methods
      label: Methods
      type: checkbox
      dataType: array
      default:
      - GET
      - POST
      options:
      - GET
      - POST
      - PUT
      - DELETE
